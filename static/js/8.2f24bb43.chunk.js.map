{"version":3,"sources":["components/inputs/Input.tsx","components/inputs/Form.tsx","components/Back.tsx","pages/home/components/RegisterDeal.tsx"],"names":["StyledInput","styled","div","StyledHint","Input","label","placeholder","disabled","type","variant","hint","name","size","defaultValue","multiline","rows","onChange","validate","rest","useState","value","setValue","errors","setErrors","handleOnChange","e","errs","target","n","v","validator","error","TextField","aria-label","aria-describedby","onBlur","length","helperText","required","PasswordInput","showPassword","setShowPassword","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","t","edge","VisibilityOff","Visibility","Select","options","data","setData","FormControl","InputLabel","id","map","item","index","MenuItem","FormHelperText","style","color","Checkbox","padding","FormControlLabel","control","checked","icon","RadioButtonUnchecked","checkedIcon","RadioButtonChecked","margin","Form","render","onSubmit","initialDataState","initialErrorState","formData","setFormData","errorState","setErrorState","updateFormData","d","handleInputChange","useCallback","undefined","useEffect","Object","keys","values","some","preventDefault","fetching","finally","hasError","isFetching","StyledBack","attrs","props","lineHeight","Back","history","useHistory","goBack","width","StyledRegisterDeal","RegisterDeal","user","useContext","AuthContext","role","ROLES","AGENT","state","setState","bankName","useParams","display","flexDirection","alignItems","justifyContent","group","marginBottom","formatDate","Date","now","marginTop"],"mappings":"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","file":"static/js/8.2f24bb43.chunk.js","sourcesContent":["import { SyntheticEvent, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  TextField,\n  Select as MSelect,\n  FormControl,\n  MenuItem,\n  InputLabel,\n  IconButton,\n  InputAdornment,\n  Checkbox as MCheckbox,\n  FormHelperText,\n  FormControlLabel,\n} from '@material-ui/core';\nimport {\n  Visibility,\n  VisibilityOff,\n  RadioButtonChecked,\n  RadioButtonUnchecked,\n} from '@material-ui/icons';\nimport { validator } from '../../utilities/helper';\n\nconst StyledInput = styled.div`\n  padding-bottom: 24px;\n  font-weight: 300;\n  font-size: 24px;\n\n  label {\n    font-size: 24px;\n    line-height: 40px;\n    font-weight: 300;\n    padding-left: 3px;\n    background-color: #f2f2f2;\n    cursor: pointer;\n  }\n  input::placeholder {\n    font-size: 24px;\n    line-height: 64px;\n  }\n  ul li {\n    font-size: 14px;\n    font-weight: 300;\n  }\n\n  input,\n  select {\n    height: 64px;\n    font-size: 24px;\n    line-height: 64px;\n  }\n\n  textarea {\n  }\n\n  input,\n  select,\n  textarea {\n    border-radius: 10px;\n    font-weight: 300;\n    cursor: pointer;\n  }\n\n  fieldset {\n    border: 2px solid #4185e9;\n    border-radius: 10px;\n  }\n\n  > div {\n    width: 100%;\n  }\n\n  .MuiSelect-select {\n    box-sizing: border-box;\n    height: 40px;\n\n    &:focus {\n      border-radius: 10px;\n    }\n  }\n\n  .MuiOutlinedInput-multiline {\n    height: auto !important;\n  }\n\n  .MuiFormControlLabel-root {\n    align-items: flex-start;\n    span {\n      font-size: 12px;\n    }\n  }\n  .MuiInputLabel-shrink {\n    transform: translate(14px, -14px) scale(0.75) !important;\n  }\n  .MuiCheckbox-root {\n    padding: 0;\n    margin-right: 8px;\n\n    .MuiSvgIcon-root {\n      color: #4185e9 !important;\n    }\n  }\n  input[type='file'] {\n    visibility: hidden;\n  }\n`;\n\nconst StyledHint = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 24px;\n  font-size: 24px;\n`;\n\nconst Input = ({\n  label,\n  placeholder = '',\n  disabled = false,\n  type = 'text',\n  variant = 'outlined',\n  hint,\n  name,\n  size = 'small',\n  defaultValue = '',\n  multiline = false,\n  rows = 3,\n  onChange,\n  validate,\n  ...rest\n}: any) => {\n  const [value, setValue]: any = useState(defaultValue);\n  const [errors, setErrors]: any = useState(null);\n\n  const handleOnChange = (e: SyntheticEvent) => {\n    const { name: n, value: v }: any = e.target;\n    setValue(v);\n\n    let errs;\n    if (validate) {\n      errs = validate ? validator(v, validate) : null;\n      setErrors(errs);\n    }\n\n    if (onChange) {\n      onChange({ name: n, value: v, error: errs });\n    }\n  };\n\n  return (\n    <StyledInput>\n      <TextField\n        size={size}\n        name={name}\n        defaultValue={defaultValue}\n        label={label}\n        type={type}\n        placeholder={placeholder}\n        disabled={disabled}\n        variant={variant}\n        aria-label={label}\n        aria-describedby={label}\n        multiline={multiline}\n        rows={rows}\n        value={value}\n        onChange={handleOnChange}\n        onBlur={validate ? handleOnChange : null}\n        error={errors && errors.length > 0}\n        helperText={errors && errors.length > 0 ? errors[0] : ''}\n        required={!!validate}\n        {...rest}\n      />\n      {hint && <StyledHint>{hint}</StyledHint>}\n    </StyledInput>\n  );\n};\n\nconst PasswordInput = ({\n  label,\n  placeholder = '',\n  disabled = false,\n  variant = 'outlined',\n  size = 'small',\n  hint,\n  name,\n  defaultValue = '',\n  onChange,\n  validate,\n  ...rest\n}: any) => {\n  const [value, setValue]: any = useState(defaultValue);\n  const [errors, setErrors]: any = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleOnChange = (e: SyntheticEvent) => {\n    const { name: n, value: v }: any = e.target;\n    setValue(v);\n\n    let errs;\n    if (validate) {\n      errs = validate ? validator(v, validate) : null;\n      setErrors(errs);\n    }\n\n    if (onChange) {\n      onChange({ name: n, value: v, error: errs });\n    }\n  };\n\n  const onShowPassword = () => {\n    setShowPassword((t) => !t);\n  };\n\n  return (\n    <StyledInput>\n      <TextField\n        name={name}\n        defaultValue={defaultValue}\n        label={label}\n        size={size}\n        type={showPassword ? 'text' : 'password'}\n        placeholder={placeholder || label}\n        disabled={disabled}\n        variant={variant}\n        aria-label={label}\n        aria-describedby={label}\n        value={value}\n        onChange={handleOnChange}\n        onBlur={validate ? handleOnChange : null}\n        error={errors && errors.length > 0}\n        helperText={errors && errors.length > 0 ? errors[0] : ''}\n        required={!!validate}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={onShowPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n        {...rest}\n      />\n      {hint && <StyledHint>{hint}</StyledHint>}\n    </StyledInput>\n  );\n};\n\nconst Select = ({\n  label,\n  placeholder = '',\n  disabled = false,\n  variant = 'outlined',\n  hint,\n  value = '',\n  size = 'small',\n  name,\n  validate,\n  onChange,\n  defaultValue,\n  options = [\n    { value: 'a', label: 'a' },\n    { value: 'b', label: 'b' },\n    { value: 'c', label: 'c' },\n  ],\n  ...rest\n}: any) => {\n  const [errors, setErrors]: any = useState([]);\n  const [data, setData]: any = useState(value);\n\n  const handleValidation = (e: SyntheticEvent) => {\n    const { value: v }: any = e.target;\n    setErrors(validate ? validator(v, validate) : []);\n  };\n\n  const handleOnChange = (e: SyntheticEvent) => {\n    const { name: n, value: v }: any = e.target;\n    setData(v);\n    if (onChange) {\n      onChange({ name: n, value: v });\n    }\n  };\n\n  return (\n    <StyledInput>\n      <FormControl\n        defaultValue={defaultValue}\n        variant={variant}\n        aria-label={label}\n        aria-describedby={label}\n        size={size}\n      >\n        <InputLabel id=\"demo-simple-select-outlined-label\">{label}</InputLabel>\n        <MSelect\n          name={name}\n          placeholder={placeholder ?? label}\n          disabled={disabled}\n          id={name}\n          label={label}\n          value={data}\n          onChange={handleOnChange}\n          onBlur={handleValidation}\n          error={errors.length > 0}\n          // helperText={errors.length > 0 ? errors[0] : ''}\n          required={!!validate}\n          {...rest}\n        >\n          {options.map((item: any, index: number) => (\n            <MenuItem value={item.value} key={index}>\n              {item.label}\n            </MenuItem>\n          ))}\n        </MSelect>\n        {errors.length > 0 && (\n          <FormHelperText style={{ color: '#f44336' }}>\n            {errors.length > 0 ? errors[0] : ''}\n          </FormHelperText>\n        )}\n      </FormControl>\n      {hint && <StyledHint>{hint}</StyledHint>}\n    </StyledInput>\n  );\n};\n\nconst Checkbox = ({\n  label,\n  disabled = false,\n  variant = 'outlined',\n  hint,\n  value,\n  name,\n  defaultValue,\n  onChange,\n  validate,\n  ...rest\n}: any) => {\n  const handleOnChange = (e: SyntheticEvent) => {\n    const { name: n, checked: v }: any = e.target;\n    if (onChange) {\n      onChange({ name: n, value: v });\n    }\n  };\n\n  return (\n    <StyledInput style={{ padding: 0 }}>\n      <FormControlLabel\n        control={\n          <MCheckbox\n            color=\"primary\"\n            checked={value}\n            onChange={handleOnChange}\n            name={name}\n            icon={<RadioButtonUnchecked />}\n            checkedIcon={<RadioButtonChecked />}\n            required={!!validate}\n          />\n        }\n        disabled={disabled}\n        label={label}\n        aria-label={label}\n        aria-describedby={label}\n        style={{ margin: 0 }}\n      />\n    </StyledInput>\n  );\n};\n\nexport { Input, PasswordInput, Select, Checkbox };\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const Form = ({\n  render,\n  onSubmit,\n  initialDataState = {},\n  initialErrorState = true,\n  ...rest\n}: {\n  onSubmit: (data: any) => Promise<any>;\n  [key: string]: any;\n}) => {\n  const [formData, setFormData] = useState(initialDataState);\n  const [errors, setErrors]: [{ [key: string]: string | null }, any] = useState({});\n  const [errorState, setErrorState]: [boolean, any] = useState(initialErrorState);\n\n  const updateFormData = (data: any) => {\n    setFormData((d: any) => ({ ...d, ...data }));\n  };\n\n  const handleInputChange = useCallback(({ name, value, error = undefined }: any) => {\n    updateFormData({ [name]: value });\n    setErrors((e: { [key: string]: string | null }) => ({ ...e, [name]: error }));\n  }, []);\n\n  useEffect(() => {\n    if (Object.keys(errors).length > 0) {\n      setErrorState(Object.values(errors).some((v) => v && v.length > 0));\n    }\n  }, [errors]);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    if (onSubmit) {\n      updateFormData({ fetching: true });\n      onSubmit(formData).finally(() => updateFormData({ fetching: false }));\n    }\n  };\n\n  return (\n    <form {...rest} onSubmit={handleSubmit}>\n      {render({\n        hasError: errorState,\n        isFetching: formData.fetching,\n        handleInputChange,\n      })}\n    </form>\n  );\n};\n","import styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport Icon from './Icon';\n\nconst StyledBack = styled.div.attrs((props) => ({ ...props }))`\n  display: flex;\n  align-items: center;\n  font-size: 24px;\n  font-weight: 500;\n  cursor: pointer;\n  span {\n    ${(props: any) => (props.lineHeight ? `line-height: ${props.lineHeight};` : '')}\n  }\n`;\n\nconst Back = ({ icon = 'caretleft', value = 'Назад', onClick, ...rest }: any) => {\n  const history = useHistory();\n\n  const goBack = () => {\n    if (onClick) {\n      onClick();\n    } else {\n      history.goBack();\n    }\n  };\n  return (\n    <StyledBack onClick={goBack} {...rest}>\n      {icon && <Icon name={icon} width={8} margin={[0, 10, 0, 0]} />}\n      {value && <span>{value}</span>}\n    </StyledBack>\n  );\n};\n\nexport default Back;\n","import { useContext, useState } from 'react';\nimport styled from 'styled-components';\nimport { Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport Back from '../../../components/Back';\nimport Button from '../../../components/Button';\nimport { Input } from '../../../components/inputs';\nimport { ROLES } from '../../../utilities/constants';\nimport { formatDate } from '../../../utilities/helper';\nimport { AuthContext } from '../../../context/AuthContext';\n\nconst StyledRegisterDeal = styled.div`\n  section {\n    min-height: 500px;\n    padding: 70px;\n\n    > * {\n      max-width: 1156px;\n      margin: auto;\n    }\n\n    @media only screen and (max-width: 767px) {\n      padding: 40px;\n    }\n\n    > h2 {\n      font-size: 28px;\n      font-weight: 500;\n      margin-bottom: 34px;\n      text-align: center;\n      line-height: 1.4;\n      position: relative;\n      width: 100%;\n      > div {\n        position: absolute;\n        top: 10px;\n      }\n    }\n\n    > p {\n      font-size: 20px;\n      margin-bottom: 30px;\n      text-align: center;\n    }\n  }\n`;\n\nconst RegisterDeal = () => {\n  const { user }: any = useContext(AuthContext);\n  const [state, setState] = useState(user.role === ROLES.AGENT ? 'initial' : 'fill-form');\n  const { bankName } = useParams<{ offerType: string; bankName: string }>();\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setState('complete');\n  };\n\n  return (\n    <StyledRegisterDeal>\n      {state === 'initial' && (\n        <section\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <h2>\n            <Back />\n            Дебетовая карта Альфа-банк\n          </h2>\n          <p>\n            <div>Вы можете оформить заявку самостоятельно</div>\n            <div>либо скопировать на неё ссылку</div>\n            <div>для клиента.</div>\n          </p>\n\n          <Button value=\"Скопировать ссылку\" size=\"lg\" group=\"outline\" margin={[0, 0, 20, 0]} />\n          <span style={{ marginBottom: -8 }}>Или</span>\n          <Button\n            value=\"Заполнить данные о клиенте\"\n            size=\"lg\"\n            margin={[30, 0, 20, 0]}\n            onClick={() => setState('fill-form')}\n          />\n        </section>\n      )}\n\n      {state === 'fill-form' && (\n        <section>\n          <h2>\n            <Back />\n            Дебетовая карта Альфа-банк\n          </h2>\n          <p>Заполните персональную информацию</p>\n          <form style={{ width: 260, margin: 'auto' }} onSubmit={handleSubmit}>\n            <Row>\n              <Col>\n                <Input\n                  label=\"ФИО\"\n                  placeholder=\"ФИО\"\n                  name=\"full_name\"\n                  type=\"text\"\n                  validate=\"required\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  label=\"Дата рождение\"\n                  placeholder=\"Дата рождение\"\n                  name=\"date_of_birth\"\n                  type=\"date\"\n                  defaultValue={formatDate(Date.now(), 'YYYY-MM-DD')}\n                  validate=\"required\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  label=\"Серия и номер паспорта\"\n                  placeholder=\"Серия и номер паспорта\"\n                  name=\"passport_number\"\n                  type=\"text\"\n                  validate=\"required\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  label=\"Кем выдан\"\n                  placeholder=\"Кем выдан\"\n                  name=\"issued_by\"\n                  type=\"text\"\n                  validate=\"required\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  label=\"Дата выдачи\"\n                  placeholder=\"Дата выдачи\"\n                  name=\"date_of_issue\"\n                  type=\"date\"\n                  defaultValue={formatDate(Date.now(), 'YYYY-MM-DD')}\n                  validate=\"required\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  label=\"Адрес регистрации\"\n                  placeholder=\"Адрес регистрации\"\n                  name=\"address\"\n                  type=\"text\"\n                  validate=\"required\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  label=\"Мобильный телефон\"\n                  placeholder=\"Мобильный телефон\"\n                  name=\"phone_number\"\n                  type=\"number\"\n                  validate=\"required|phone_number\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Input\n                  label=\"E-mail\"\n                  placeholder=\"E-mail\"\n                  name=\"email\"\n                  type=\"email\"\n                  validate=\"required\"\n                />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}>\n                <Button type=\"submit\" value=\"Отправить\" size=\"md\" width={100} />\n              </Col>\n            </Row>\n          </form>\n        </section>\n      )}\n\n      {state === 'complete' && (\n        <section\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <h2>Дебетовая карта ${bankName}</h2>\n          <p>\n            <div>Заявка успешно отправлена!</div>\n            <div>Её статус вы можете отследить в своём</div>\n            <div>личном кабинете.</div>\n          </p>\n          <Button value=\"Вернуться на главную страницу\" size=\"lg\" margin={[20, 0]} />\n        </section>\n      )}\n    </StyledRegisterDeal>\n  );\n};\n\nexport default RegisterDeal;\n"],"sourceRoot":""}